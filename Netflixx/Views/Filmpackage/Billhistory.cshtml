@model IEnumerable<Netflixx.Models.PointsTransactionsModel>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>L·ªãch s·ª≠ thanh to√°n</title>
    @{
        var transactions = Model?.ToList() ?? new List<Netflixx.Models.PointsTransactionsModel>();
        var totalTrans = transactions.Count;
        var pointsReceived = transactions.Where(t => t.PointsChange > 0).Sum(t => t.PointsChange);
        var pointsSpent = transactions.Where(t => t.PointsChange < 0).Sum(t => t.PointsChange);
    }
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0c0c0c 0%, #1a1a1a 100%);
            color: #ffffff;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 40px 0;
        }

            .header h1 {
                font-size: 2.5rem;
                font-weight: 700;
                color: #ffffff;
                margin-bottom: 10px;
                text-shadow: 0 2px 4px rgba(0,0,0,0.5);
            }

            .header p {
                font-size: 1.1rem;
                color: #b3b3b3;
                max-width: 600px;
                margin: 0 auto;
                line-height: 1.6;
            }

        .transaction-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 30px;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .transaction-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
            }

        .transaction-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .transaction-date {
            font-size: 1.1rem;
            color: #b3b3b3;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .transaction-date::before {
                content: "üìÖ";
                font-size: 1.2rem;
            }

        .transaction-change {
            font-size: 1.3rem;
            font-weight: 700;
            padding: 8px 16px;
            border-radius: 8px;
            display: inline-block;
        }

            .transaction-change.positive {
                background: linear-gradient(135deg, #4CAF50, #66BB6A);
                color: white;
            }

            .transaction-change.negative {
                background: linear-gradient(135deg, #f44336, #ef5350);
                color: white;
            }

            .transaction-change.neutral {
                background: linear-gradient(135deg, #9E9E9E, #BDBDBD);
                color: white;
            }

        .transaction-reason {
            font-size: 1rem;
            color: #e0e0e0;
            line-height: 1.5;
            padding: 15px;
            background: rgba(255, 255, 255, 0.03);
            border-radius: 8px;
            border-left: 4px solid #e50914;
        }

        .no-transactions {
            text-align: center;
            padding: 60px 20px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 16px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

            .no-transactions h3 {
                font-size: 1.5rem;
                color: #b3b3b3;
                margin-bottom: 10px;
            }

            .no-transactions p {
                color: #888;
                font-size: 1rem;
            }

        .back-button {
            display: inline-block;
            background: linear-gradient(135deg, #444, #666);
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

            .back-button:hover {
                background: linear-gradient(135deg, #555, #777);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
                color: white;
                text-decoration: none;
            }

        .stats-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

            .stat-card h3 {
                font-size: 0.9rem;
                color: #b3b3b3;
                margin-bottom: 10px;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

            .stat-card .value {
                font-size: 1.5rem;
                font-weight: 700;
                color: #ffffff;
            }

        
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>L·ªãch s·ª≠ giao d·ªãch</h1>
            <p>Theo d√µi t·∫•t c·∫£ c√°c giao d·ªãch v√† thay ƒë·ªïi ƒëi·ªÉm trong t√†i kho·∫£n c·ªßa b·∫°n</p>
        </div>

        <div class="stats-overview">
            <div class="stat-card">
                <h3>T·ªïng giao d·ªãch</h3>
                <div class="value">@totalTrans</div>
            </div>
            <div class="stat-card">
                <h3>ƒêi·ªÉm nh·∫≠n ƒë∆∞·ª£c</h3>
                <div class="value">@((pointsReceived > 0 ? "+" : "") + pointsReceived)</div>
            </div>
            <div class="stat-card">
                <h3>ƒêi·ªÉm ƒë√£ s·ª≠ d·ª•ng</h3>
                <div class="value">@pointsSpent</div>
            </div>
        </div>

        @if (transactions.Any())
        {
            @foreach (var item in transactions)
            {
                var cls = item.PointsChange > 0 ? "positive" : item.PointsChange < 0 ? "negative" : "neutral";
                <div class="transaction-card">
                    <div class="transaction-header">
                        <div class="transaction-date">@item.TransactionDate.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</div>
                        <div class="transaction-change @cls">
                            @((item.PointsChange > 0 ? "+" : "") + item.PointsChange + " ƒëi·ªÉm")
                        </div>
                    </div>
                    <div class="transaction-reason">
                        @item.Reason
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-transactions">
                <h3>Kh√¥ng c√≥ giao d·ªãch</h3>
                <p>B·∫°n ch∆∞a th·ª±c hi·ªán giao d·ªãch n√†o.</p>
            </div>
        }

        <a asp-action="Index" class="back-button">‚Üê Quay l·∫°i</a>
    </div>

    <script>
        // Animation for cards appearing
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.transaction-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
</body>
</html>