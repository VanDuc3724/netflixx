@model Netflixx.Models.ViewModel.BillHistoryViewModel
@{
    ViewData["Title"] = "Lịch Sử Đơn Hàng & Thanh Toán";
    Layout = "_Layout";
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #0f111a;
            color: #ffffff;
        }

        main {
            padding: 80px 5% 40px;
        }

        .page-title {
            text-align: center;
            margin-bottom: 50px;
        }

            .page-title h1 {
                font-size: 36px;
                margin-bottom: 15px;
            }

            .page-title p {
                font-size: 18px;
                color: #cccccc;
                max-width: 700px;
                margin: 0 auto;
            }

        .billing-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .current-plan {
            background-color: #1a1f33;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 40px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .plan-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .plan-info h2 {
            font-size: 24px;
            margin-bottom: 5px;
        }

        .plan-type {
            font-size: 22px;
            font-weight: 600;
            color: #e50914;
        }

        .plan-details {
            color: #cccccc;
            line-height: 1.6;
        }

        .plan-actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

            .plan-actions button {
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: 600;
                cursor: pointer;
                font-size: 16px;
                border: none;
                transition: background-color 0.3s;
            }

        .change-plan-btn {
            background-color: #3949ab;
            color: #ffffff;
        }

            .change-plan-btn:hover {
                background-color: #303f9f;
            }

        .cancel-plan-btn {
            background-color: transparent;
            color: #cccccc;
            border: 1px solid #cccccc;
        }

            .cancel-plan-btn:hover {
                background-color: rgba(255, 255, 255, 0.1);
            }

        .history-section {
            background-color: #1a1f33;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .history-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .history-section h2 {
            font-size: 24px;
        }

        .filter-dropdown {
            padding: 8px 16px;
            background-color: #2a304a;
            color: #ffffff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
        }

        .search-input {
            padding: 8px 16px;
            background-color: #2a304a;
            color: #ffffff;
            border: none;
            border-radius: 6px;
            margin-left: 15px;
            font-size: 16px;
        }

            .search-input::placeholder {
                color: #cccccc;
            }

            .filter-dropdown:focus {
                outline: none;
            }

        .billing-table-container {
            overflow-x: auto;
        }

        .billing-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

            .billing-table th, .billing-table td {
                padding: 15px 20px;
                text-align: left;
                border-bottom: 1px solid #2a304a;
            }

            .billing-table th {
                background-color: #161a2b;
                font-weight: 600;
                cursor: pointer;
            }

            .billing-table th.sort-asc::after {
                content: " \25B2"; /* Up arrow */
            }

            .billing-table th.sort-desc::after {
                content: " \25BC"; /* Down arrow */
            }

            .billing-table tr:nth-child(even) {
                background-color: #1e2337;
            }

        .action-btn {
            padding: 5px 10px;
            background-color: transparent;
            color: #3949ab;
            border: none;
            cursor: pointer;
            font-size: 14px;
            text-decoration: underline;
        }

            .action-btn:hover {
                color: #e50914;
            }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
            flex-wrap: wrap;
        }

            .pagination button {
                min-width: 36px;
                height: 36px;
                border-radius: 6px;
                background-color: #2a304a;
                color: #ffffff;
                border: none;
                cursor: pointer;
                font-size: 16px;
                transition: background-color 0.3s;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 0 8px;
            }

                .pagination button:hover {
                    background-color: #3949ab;
                }

                .pagination button.active {
                    background-color: #e50914;
                }

                .pagination button:disabled {
                    background-color: #1a1f33;
                    color: #666;
                    cursor: not-allowed;
                }

        .loading {
            text-align: center;
            padding: 40px;
            color: #cccccc;
        }

        .error-message {
            background-color: #dc3545;
            color: white;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            text-align: center;
        }

        .refresh-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            margin-left: 15px;
        }

            .refresh-btn:hover {
                background-color: #218838;
            }

        .username-info {
            background-color: #2a304a;
            padding: 10px 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            font-size: 14px;
            color: #cccccc;
        }
    </style>
}
<main>
        <div class="page-title">
            <h1>Lịch Sử Đơn Hàng & Thanh Toán</h1>
            <p>Quản lý gói dịch vụ, phương thức thanh toán và xem lịch sử thanh toán của bạn</p>
        </div>

        

            <!-- Lịch sử giao dịch -->
            <div class="history-section">
                <div class="history-header d-flex justify-content-between align-items-center">
                    <h2>Giao dịch gói dịch vụ</h2>
                    <div class="d-flex align-items-center gap-2">
                        <select class="filter-dropdown" id="transactionsDateFilter">
                            <option value="">Tất cả ngày</option>
                            <option value="3">3 ngày</option>
                            <option value="7">7 ngày</option>
                            <option value="30">30 ngày</option>
                        </select>
                        <select class="filter-dropdown" id="transactionsStatusFilter">
                            <option value="">Tất cả trạng thái</option>
                            <option value="Success">Success</option>
                            <option value="Failed">Failed</option>
                        </select>
                        <span class="mr-2">Xem</span>
                        <select class="form-control" style="width: 80px;" id="transactionsPageLength">
                            <option value="5" selected>5</option>
                            <option value="10">10</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
                <div class="billing-table-container">
                    <table class="billing-table" id="transactionsTable">
                        <thead>
                            <tr>
                                <th>Ngày</th>
                                <th>Mã giao dịch</th>
                                <th>Trạng thái</th>
                                <th>Số tiền</th>
                                <th>Nhà cung cấp</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Transactions.Any())
                            {
                                foreach (var t in Model.Transactions)
                                {
                                    <tr>
                                        <td>@t.TransactionDate.ToString("dd/MM/yyyy")</td>
                                        <td>@t.ExternalTransactionRef</td>
                                        <td>@t.Status</td>
                                        <td>@t.Amount.ToString("N0") @t.Currency</td>
                                        <td>@t.Provider?.Name</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="history-section" style="margin-top:40px;">
                <div class="history-header d-flex justify-content-between align-items-center">
                    <h2>Lịch sử mua phim</h2>
                    <div class="d-flex align-items-center gap-2">
                        <input type="text" class="search-input" id="purchasesSearch" placeholder="Tìm tên phim" />
                        <select class="filter-dropdown" id="purchasesDateFilter">
                            <option value="">Tất cả ngày</option>
                            <option value="3">3 ngày</option>
                            <option value="7">7 ngày</option>
                            <option value="30">30 ngày</option>
                        </select>
                        <span class="mr-2">Xem</span>
                        <select class="form-control" style="width: 80px;" id="purchasesPageLength">
                            <option value="5" selected>5</option>
                            <option value="10">10</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
                <div class="billing-table-container">
                    <table class="billing-table" id="purchasesTable">
                        <thead>
                            <tr>
                                <th>Ngày</th>
                                <th>Tên phim</th>
                                <th>Giá</th>
                                <th>Điểm sử dụng</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.FilmPurchases.Any())
                            {
                                foreach (var p in Model.FilmPurchases)
                                {
                                    <tr>
                                        <td>@p.PurchaseDate.ToString("dd/MM/yyyy")</td>
                                        <td>@(p.Film?.Title ?? string.Empty)</td>
                                        <td>@p.PricePaid.ToString("N0")</td>
                                        <td>@p.PointsUsed</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        </div>


    </main>
@section Scripts {
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            var transactionsTable = $('#transactionsTable').DataTable({
                pageLength: parseInt($('#transactionsPageLength').val()),
                lengthMenu: [5, 10, 100],
                lengthChange: false,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.21/i18n/Vietnamese.json',
                    lengthMenu: 'Hiển thị _MENU_ mục',
                    paginate: { previous: 'Trước', next: 'Sau' },
                    emptyTable: 'Không có giao dịch nào'
                },
                dom: 'rt<"bottom"ip><"clear">'
            });

            // Custom filter for transactions table
            $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                if (settings.nTable.id !== 'transactionsTable') return true;
                var days = $('#transactionsDateFilter').val();
                var status = $('#transactionsStatusFilter').val().toLowerCase();
                var dateParts = data[0].split('/');
                var rowDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);
                var diffDays = (new Date() - rowDate) / (1000 * 60 * 60 * 24);
                var dateMatch = !days || diffDays <= parseInt(days);
                var statusMatch = !status || status === data[2].toLowerCase();
                return dateMatch && statusMatch;
            });

            $('#transactionsPageLength').change(function () {
                var len = parseInt($(this).val());
                transactionsTable.page.len(len).draw();
            });

            $('#transactionsDateFilter, #transactionsStatusFilter').change(function () {
                transactionsTable.draw();
            });

            var purchasesTable = $('#purchasesTable').DataTable({
                pageLength: parseInt($('#purchasesPageLength').val()),
                lengthMenu: [5, 10, 100],
                lengthChange: false,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.21/i18n/Vietnamese.json',
                    lengthMenu: 'Hiển thị _MENU_ mục',
                    paginate: { previous: 'Trước', next: 'Sau' },
                    emptyTable: 'Không có giao dịch mua phim nào'
                },
                dom: 'rt<"bottom"ip><"clear">'
            });

            // Custom filter for purchases table
            $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                if (settings.nTable.id !== 'purchasesTable') return true;
                var days = $('#purchasesDateFilter').val();
                var dateParts = data[0].split('/');
                var rowDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);
                var diffDays = (new Date() - rowDate) / (1000 * 60 * 60 * 24);
                return !days || diffDays <= parseInt(days);
            });

            $('#purchasesPageLength').change(function () {
                var len = parseInt($(this).val());
                purchasesTable.page.len(len).draw();
            });

            $('#purchasesDateFilter').change(function () {
                purchasesTable.draw();
            });

            $('#purchasesSearch').on('keyup change', function () {
                purchasesTable.column(1).search(this.value).draw();
            });

        });
    </script>
}
