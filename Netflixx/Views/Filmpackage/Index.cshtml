@model IEnumerable<Netflixx.Models.PackagesModel>
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject UserManager<AppUserModel> UserManager
@inject Netflixx.Repositories.DBContext DBContext
@{
    ViewData["Title"] = "Film Packages";
    Layout = "_Layout";
}

@section Styles {
    <style>
        /* Reset và base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            color: #fff;
            min-height: 100vh;
        }

        main {
            padding: 2rem 1rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Page Title */
        .page-title {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem 0;
        }

            .page-title h1 {
                font-size: 3rem;
                font-weight: 700;
                background: linear-gradient(45deg, #e50914, #ff6b6b, #4ecdc4);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 1rem;
                text-shadow: 0 4px 20px rgba(229, 9, 20, 0.3);
            }

            .page-title p {
                font-size: 1.2rem;
                color: #b3b3b3;
                max-width: 600px;
                margin: 0 auto;
                line-height: 1.6;
            }

        /* Action Buttons */
        .text-center {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-bottom: 3rem;
            flex-wrap: wrap;
        }

        .purchase-history-btn, .create-package-btn {
            padding: 12px 30px;
            border-radius: 50px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
        }

        .purchase-history-btn {
            background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .create-package-btn {
            background: linear-gradient(45deg, #f093fb 0%, #f5576c 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(240, 147, 251, 0.4);
        }

            .purchase-history-btn:hover, .create-package-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
                color: white;
                text-decoration: none;
            }

        /* Package Container */
        .package-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            padding: 0 1rem;
        }

        /* Package Card */
        .package-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 20px;
            overflow: hidden;
            position: relative;
            transition: all 0.4s ease;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            min-height: 500px;
            display: flex;
            flex-direction: column;
        }

            .package-card:hover {
                transform: translateY(-10px) scale(1.02);
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
                border-color: rgba(229, 9, 20, 0.3);
            }

            .package-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(45deg, transparent, rgba(229, 9, 20, 0.1), transparent);
                opacity: 0;
                transition: opacity 0.3s ease;
                pointer-events: none;
            }

            .package-card:hover::before {
                opacity: 1;
            }

        /* Package Header */
        .package-header {
            padding: 2rem;
            text-align: center;
            position: relative;
            background: linear-gradient(135deg, #e50914 0%, #ff6b6b 100%);
            color: white;
        }

            .package-header.basic {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            }

            .package-header.premium {
                background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            }

            .package-header.vip {
                background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            }

            .package-header.standard {
                background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
            }

            .package-header h2 {
                font-size: 2rem;
                font-weight: 700;
                margin-bottom: 1rem;
                text-transform: uppercase;
                letter-spacing: 2px;
            }

        .price {
            font-size: 2.5rem;
            font-weight: 800;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

            .price span {
                font-size: 1rem;
                font-weight: 500;
                opacity: 0.9;
                text-transform: uppercase;
            }

        /* Film Count */
        .film-count {
            padding: 1rem 2rem;
            background: rgba(255, 255, 255, 0.1);
            text-align: center;
            font-size: 1.1rem;
            font-weight: 600;
            color: #4ecdc4;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        /* Package Features */
        .package-features {
            flex: 1;
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            max-height: 300px;
            overflow-y: auto;
        }

            .package-features::-webkit-scrollbar {
                width: 6px;
            }

            .package-features::-webkit-scrollbar-track {
                background: rgba(255, 255, 255, 0.1);
                border-radius: 3px;
            }

            .package-features::-webkit-scrollbar-thumb {
                background: linear-gradient(45deg, #e50914, #ff6b6b);
                border-radius: 3px;
            }

        .feature {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 0.8rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

            .feature:hover {
                background: rgba(255, 255, 255, 0.1);
                transform: translateX(5px);
            }

        .feature-icon {
            font-size: 1.5rem;
            filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
        }

        .feature-text {
            font-size: 1rem;
            font-weight: 500;
            color: #e0e0e0;
            line-height: 1.4;
        }

        /* Buy Form - căn giữa button */
        .buy-form {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 1.5rem;
            margin-top: auto; /* Đẩy button xuống dưới cùng */
        }

        /* Buttons - căn giữa và responsive */
        .package-card .btn {
            padding: 15px 30px;
            border-radius: 50px;
            font-weight: 600;
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            width: 75%;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(45deg, #e50914, #ff6b6b);
            color: white;
            box-shadow: 0 4px 15px rgba(229, 9, 20, 0.4);
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(229, 9, 20, 0.6);
            }

        /* Đối với button "Đã sở hữu" */
        .btn-success {
            background: linear-gradient(45deg, #4ecdc4, #44a08d);
            color: white;
            box-shadow: 0 4px 15px rgba(78, 205, 196, 0.4);
            cursor: default;
            margin: 1.5rem auto;
            margin-top: auto;
            display: block;
            width: 75%;
        }

            .btn-success:hover {
                transform: none;
            }

        /* Thêm hiệu ứng glow cho các gói đặc biệt */
        .package-card:nth-child(2) {
            box-shadow: 0 0 30px rgba(102, 126, 234, 0.3);
        }

        .package-card:nth-child(3) {
            box-shadow: 0 0 30px rgba(240, 147, 251, 0.3);
        }

        .package-card:nth-child(4) {
            box-shadow: 0 0 30px rgba(255, 236, 210, 0.3);
        }

        /* Utility classes */
        .w-75 {
            width: 75%;
        }

        .mb-3 {
            margin-bottom: 1rem;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }
    </style>
}

<main>
    <div class="page-title">
        <h1>Danh Sách Gói Phim</h1>
        <p>Chọn gói phù hợp để xem các bộ phim yêu thích với mức giá tiết kiệm.</p>
    </div>

    <div class="text-center mb-4">
        <a asp-action="Billhistory" class="purchase-history-btn">Lịch sử mua gói</a>
        @* <a asp-controller="PackagesManager" asp-action="Create" class="create-package-btn">Tạo gói mới</a> *@
    </div>

    <div class="package-container">
        @foreach (var p in Model)
        {
            var user = await UserManager.GetUserAsync(User);
            bool owned = false;
            if (user != null)
            {
                owned = await DBContext.PackageSubscriptions
                .AnyAsync(ps => ps.UserID == user.Id && ps.PackageID == p.Id && ps.EndDate >= DateTime.UtcNow);
            }

            <div class="package-card">
                <div class="package-header @(p.Name.ToLower())">
                    <h2>@p.Name</h2>
                    <div class="price">@p.Price.ToString("N0") <span>coins</span></div>
                </div>

                <div class="film-count">Bao gồm @(p.PackageFilms?.Count ?? 0) phim</div>

                <div class="package-features">
                    @foreach (var pf in p.PackageFilms ?? new List<Netflixx.Models.PackageFilmsModel>())
                    {
                        <div class="feature">
                            <span class="feature-icon">🎬</span>
                            <span class="feature-text">@pf.Film?.Title</span>
                        </div>
                    }
                </div>

                @if (owned)
                {
                    <a asp-controller="Film" asp-action="Type" class="btn btn-success w-75 mb-3">Đã sở hữu</a>
                }
                else
                {
                    <form asp-action="BuyWithCoins" method="post" class="buy-form">
                        <input type="hidden" name="packageId" value="@p.Id" />
                        <button type="submit" class="btn btn-primary w-75 mb-3">Mua gói</button>
                    </form>
                }
            </div>
        }
    </div>
</main>

@section Scripts {
    @await Html.PartialAsync("_NotificationPartial")

    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Thêm hiệu ứng load cho cards
            const cards = document.querySelectorAll('.package-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(50px)';

                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Xử lý form mua gói
            document.querySelectorAll('.buy-form').forEach(function(form) {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();

                    const button = form.querySelector('button');
                    const originalText = button.textContent;

                    // Hiệu ứng loading
                    button.innerHTML = '<span style="display: inline-block; animation: spin 1s linear infinite;">⏳</span> Đang xử lý...';
                    button.disabled = true;

                    Swal.fire({
                        title: 'Xác nhận mua gói?',
                        text: 'Bạn có chắc chắn muốn mua gói phim này không?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#e50914',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Mua ngay',
                        cancelButtonText: 'Hủy bỏ',
                        background: '#1a1a2e',
                        color: '#fff',
                        customClass: {
                            popup: 'swal-custom-popup',
                            title: 'swal-custom-title',
                            content: 'swal-custom-content'
                        }
                    }).then(function (result) {
                        if (result.isConfirmed) {
                            // Hiển thị loading
                            Swal.fire({
                                title: 'Đang xử lý...',
                                text: 'Vui lòng chờ trong giây lát',
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                background: '#1a1a2e',
                                color: '#fff',
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            form.submit();
                        } else {
                            // Reset button
                            button.innerHTML = originalText;
                            button.disabled = false;
                        }
                    });
                });
            });

            // Thêm hiệu ứng parallax cho background
            window.addEventListener('scroll', function() {
                const scrolled = window.pageYOffset;
                const parallax = document.querySelector('body');
                const speed = scrolled * 0.5;
                parallax.style.backgroundPosition = `center ${speed}px`;
            });
        });
    </script>
}
