@model Netflixx.Models.ViewModel.FilmDetailViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUserModel> _userManager
@inject DBContext DBContext
@using Microsoft.EntityFrameworkCore
@using Netflixx.Repositories
@{ 
    ViewData["Title"] = Model.Film.Title;
    Layout = null;
}

@{
    var user = await _userManager.GetUserAsync(User);
    var hasPurchased = false;
    if (user != null)
    {
        hasPurchased = await DBContext.FilmPurchases.AnyAsync(p => p.UserID == user.Id && p.FilmID == Model.Film.Id);
    }
}

@{
    // determine which tab is active based on a query‑string or default
    var activeTab = (Context.Request.Query["tab"].FirstOrDefault() ?? "info");
}

@{
    // round to nearest half‑star
    var avg = Math.Round(Model.AverageRating * 2, MidpointRounding.AwayFromZero) / 2;
    var fullStars = (int)Math.Floor(avg);
    var halfStar = (avg - fullStars) == 0.5;
    var emptyStars = 10 - fullStars - (halfStar ? 1 : 0);
}

<!-- Styles & Fonts -->

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap" rel="stylesheet" />
<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/css/fontawesome.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<style>
    body {
        background-color: #121212;
        color: #f1f1f1;
        font-family: 'Poppins', sans-serif;
    }
    .card {
        background-color: #1e1e1e;
        border: 1px solid #333;
    }
    .details-box {
        height: 314px;
        overflow-y: auto;
    }
    .recent-card img {
        height: 155px;
        object-fit: cover;
    }
    .reply {
        margin-left: 2rem;
    }

    .trailer-video {
        
        max-height: 450px; /* match your poster height */
        object-fit: contain; /* letter‑box or fill behavior */
    }

    .star-rating {
        font-size: 1.5rem;
        unicode-bidi: bidi-override;
        display: flex;
        flex-direction: row-reverse;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            color: #555;
            cursor: pointer;
            padding: 0 2px;
        }

        .star-rating input:checked ~ label {
            color: gold;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: gold;
        }

    .fa-star.checked,
    .fa-star-half-o.checked {
        color: orange;
        text-shadow: 0 0 3px #fff;
    }

    .poster-card {
        cursor: pointer;
    }

    .watch-overlay {
        background: rgba(0,0,0,0.6);
        color: #fff;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
        z-index: 10;
    }

    .poster-card:hover .watch-overlay {
        opacity: 1;
    }

    /* Avatar trigger in navbar */
    .avatar-trigger {
        width: 40px !important;
        height: 40px !important;
        border-radius: 50%;
        cursor: pointer;
    }

    html, body {
        margin: 0;
        padding: 0;
        background-color: #121212;
        height: 100%;
        width: 100%;
    }
</style>

<header>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">

        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                <img src="/image/logo/NetflixxLogo.png"
                     alt="Netflixx Logo"
                     style="height:40px;" />
            </a>
            <ul class="navbar-nav me-auto">
                <li class="nav-item"><a class="nav-link active" asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Film" asp-action="Index">Search</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Film" asp-action="Type">Films</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Filmpackage" asp-action="Index">Film Package</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Blog" asp-action="Index">Blog</a></li>
                <li class="nav-item"><a class="nav-link" asp-area="ShopSouvenir" asp-controller="Home" asp-action="Index">Souvenir</a></li>
                <li class="nav-item"><a class="nav-link" asp-area="ProductionManager" asp-controller="ProductionManager" asp-action="Index">List Company</a></li>
                <li class="nav-item"><a class="nav-link" href="#">Series</a></li>
                <li class="nav-item"><a class="nav-link" href="#">Categories</a></li>
            </ul>
            <span class="navbar-text me-3"><i class="fa fa-bell"></i></span>
            <div class="dropdown">
                <a class="nav-link dropdown-toggle p-0" role="button"
                   id="avatarDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <img src="@ViewBag.AvatarUrl"
                         class="avatar-trigger"
                         alt="User avatar" />
                </a>
                <ul class="dropdown-menu dropdown-menu-end mt-2" aria-labelledby="avatarDropdown">
                    <li><a class="dropdown-item" asp-controller="Home" asp-action="Profile">Profile</a></li>
                    <li><a class="dropdown-item" asp-controller="Home" asp-action="History">History</a></li>
                    <li><a class="dropdown-item" asp-controller="Home" asp-action="MyList">My List</a></li>
                    <li><button class="dropdown-item" type="button">Settings</button></li>
                    <li><hr class="dropdown-divider" /></li>
                    <li>
                        <form asp-controller="Logout" asp-action="Logout" method="post" class="m-0">
                            <button type="submit" class="dropdown-item">Sign out</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<div class="container py-4" style="margin-top: 69px">
    <div class="row">

        <!-- LEFT BLOCK: 8 cols total -->
        <div class="col-md-8">

            <!-- Row 1: Poster (2) + Description (6) -->
            <div class="row mb-3">
                <div class="col-md-4">
                    @if (hasPurchased)
                    {
                        <a asp-action="Watch"
                           asp-route-filmId="@Model.Film.Id"
                           class="poster-link d-block">
                            <div class="card poster-card position-relative overflow-hidden">
                                <img src="@Model.Film.PosterPath"
                                     class="card-img-top"
                                     style="height:314px; object-fit:cover;" />

                                <div class="watch-overlay position-absolute top-50 start-50 translate-middle text-center">
                                    <i class="fa fa-play fa-2x"></i>
                                    <div class="mt-1">Xem ngay</div>
                                </div>
                            </div>
                        </a>
                    }
                    else if (user != null)
                    {
                        <div class="card poster-card position-relative overflow-hidden">
                            <img src="@Model.Film.PosterPath"
                                 class="card-img-top"
                                 style="height:314px; object-fit:cover;" />
                        </div>
                        <form id="purchaseForm" asp-action="Purchase" method="post" class="mt-2">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Film.Id" />
                            <button type="submit" class="btn btn-danger w-100">
                                Mua - @Model.Film.Price?.ToString("N0") coins
                            </button>
                        </form>
                    }
                    else
                    {
                        <div class="card poster-card position-relative overflow-hidden">
                            <img src="@Model.Film.PosterPath"
                                 class="card-img-top"
                                 style="height:314px; object-fit:cover;" />
                        </div>
                        <a asp-controller="Account" asp-action="Login" class="btn btn-danger w-100 mt-2">
                            Login to Buy
                        </a>
                    }
                </div>
                <div class="col-md-8">
                    <div class="card p-3 details-box"
                         style="height:314px; overflow-y:auto;">
                        <h2 class="text-light">@Model.Film.Title</h2>
                        <p class="small text-muted">
                            Release: @Model.Film.ReleaseDate?.ToString("yyyy")
                        </p>
                        <p>@Model.Film.Description</p>
                        <hr class="border-secondary" />
                        <div class="d-flex justify-content-between">
                            <span>
                                <i class="fa fa-star" style="color: yellow"></i>
                                @Model.AverageRating.ToString()/10
                            </span>
                            <span>
                                <i class="fa fa-dollar-sign" style="color: red"></i>
                                @Model.Film.Price?.ToString("N0")
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row 2: Trailer (full 8 cols) -->
            <ul class="nav nav-tabs mb-3" role="tablist">
                <li class="nav-item">
                    <a class="nav-link @(activeTab == "info" ? "active" : "")"
                       asp-route-tab="info"
                       >
                        <i class="fas fa-info-circle"></i> Information
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(activeTab == "trailer" ? "active" : "")"
                       asp-route-tab="trailer"
                       >
                        <i class="fas fa-film"></i> Trailer
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane fade @(activeTab == "info" ? "show active" : "")">
                    <!-- ===== INFO CONTENT ===== -->
                    <div class="card p-3 mb-4">
                        <h4>@Model.Film.Title</h4>
                        <p><strong>Genre:</strong> @Model.Film.Genre</p>
                        <p><strong>Release:</strong> @Model.Film.ReleaseDate?.ToString("yyyy")</p>
                        <p>@Model.Film.Description</p>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form id="ratingForm-@Model.Film.Id"
                                  asp-action="SubmitRating"
                                  method="post"
                                  class="mb-4">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="FilmId" value="@Model.Film.Id" />

                                <div class="average-stars mb-2">
                                    <strong>Rating:</strong>
                                    @{
                                        var avg = Math.Round(Model.AverageRating * 2, MidpointRounding.AwayFromZero) / 2;
                                        var fullStars = (int)Math.Floor(avg);
                                        var halfStar = (avg - fullStars) == 0.5;
                                        var emptyStars = 10 - fullStars - (halfStar ? 1 : 0);
                                    }
                                    @for (int i = 0; i < fullStars; i++)
                                    {
                                        <span class="fa fa-star checked"></span>
                                    }
                                    @if (halfStar)
                                    {
                                        <span class="fa fa-star-half-o checked"></span>
                                    }
                                    @for (int i = 0; i < emptyStars; i++)
                                    {
                                        <span class="fa fa-star"></span>
                                    }
                                    <span class="ms-2">
                                        @Model.AverageRating.ToString("0.0") / 10
                                        (<small>@Model.RatingCount ratings</small>)
                                    </span>
                                </div>

                                <div class="user-rating">
                                    <div style="display: flex">
                                    <strong style="padding-top: 10.5px">Your rating:</strong>
                                    <div class="star-rating mt-1">
                                        @for (int i = 10; i >= 1; i--)
                                        {
                                            <input type="radio"
                                                   id="star-@Model.Film.Id-@i"
                                                   name="RatingValue"
                                                   value="@i"
                                                   @(Model.UserRating == i ? "checked" : "") />
                                            <label for="star-@Model.Film.Id-@i" title="@i stars">★</label>
                                        }
                                    </div>
                                    </div>
                                </div>
                            </form>
                        }
                        else
                        {
                            <div class="average-stars mb-2">
                                <!-- just the static display for anonymous users -->
                                <strong>Rating:</strong>
                                @* same loops as above *@
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <span class="fa fa-star checked"></span>
                                }
                                @if (halfStar)
                                {
                                    <span class="fa fa-star-half-o checked"></span>
                                }
                                @for (int i = 0; i < emptyStars; i++)
                                {
                                    <span class="fa fa-star"></span>
                                }
                                <span class="ms-2">
                                    @Model.AverageRating.ToString() / 10
                                    (<small>@Model.RatingCount ratings</small>)
                                </span>
                            </div>
                            <p><a asp-controller="Account" asp-action="Login">Log in</a> to rate this film.</p>
                        }


                        
                    </div>

                </div>

                <div class="tab-pane fade @(activeTab == "trailer" ? "show active" : "")">
                    <!-- ===== TRAILER CONTENT (full‑width video) ===== -->
                    @if (!string.IsNullOrWhiteSpace(Model.Film.TrailerURL))
                    {
                        <div class="ratio ratio-16x9">
                            <video id="player"
                                   class="w-100 h-100"
                                   controls
                                   preload="metadata"
                                   poster="@Model.Film.PosterPath"
                                   src="@Url.Content("~/" + Model.Film.TrailerURL)">
                                Your browser does not support video playback.
                            </video>
                        </div>
                    }
                    else
                    {
                        <p>No trailer available.</p>
                    }
                </div>
            </div>
        </div>

        <!-- RIGHT BLOCK: Recent Films (4 cols) -->
        <div class="col-md-4">
            <h5 class="text-light">Recent Films</h5>
            @foreach (var f in Model.RecentFilms)
            {
                <div class="card mb-2 recent-card">
                    <div class="row g-0">
                        <div class="col-4">
                            <img src="@(f.PosterPath ?? "/images/placeholder.png")"
                                 class="img-fluid"
                                 alt="@f.Title" />
                        </div>
                        <div class="col-8">
                            <div class="card-body py-2 px-3">
                                <a asp-action="Details"
                                   asp-route-id="@f.Id"
                                   class="text-decoration-none text-light">
                                    <h6 class="mb-0">@f.Title</h6>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

<!-- Comments -->
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <div class="card p-3">
            <h5>Comments</h5>

            @* -------- NEW COMMENT (top‑level) -------- *@
            <form asp-action="PostComment" method="post" class="mb-4">
                <input type="hidden" name="Film.Id" value="@Model.Film.Id" />
                <input type="hidden" name="ReplyToCommentId" value="" />

                <textarea name="NewCommentContent"
                          class="form-control mb-2"
                          rows="3"
                          placeholder="Write a new comment…"></textarea>
                <button type="submit" class="btn btn-sm btn-primary">
                    Post Comment
                </button>
            </form>

            @* -------- EXISTING COMMENTS & REPLIES -------- *@
            @foreach (var c in Model.Comments.Where(c => c.Level == 1))
            {
                <div class="mb-4">
                    <div>
                        <strong>@c.AuthorName</strong>
                        <span class="text-muted small">@c.CreatedAt</span>
                    </div>
                    <p>@c.Content</p>

                    @* Always‑visible reply box for this comment *@
                    <form asp-action="PostComment" method="post" class="mb-3 ps-4">
                        <input type="hidden" name="Film.Id" value="@Model.Film.Id" />
                        <input type="hidden" name="ReplyToCommentId" value="@c.Id" />

                        <div class="input-group input-group-sm">
                            <input type="text"
                                   name="NewCommentContent"
                                   class="form-control"
                                   placeholder="Reply to @c.AuthorName…" />
                            <button type="submit" class="btn btn-outline-light">
                                Reply
                            </button>
                        </div>
                    </form>

                    @* Render replies *@
                    @foreach (var r in Model.Comments.Where(r => r.ParentCommentId == c.Id))
                    {
                        <div class="reply mt-2 p-2 border-start border-secondary">
                            <strong>@r.AuthorName</strong>
                            <span class="text-muted small">@r.CreatedAt</span>
                            <p>@r.Content</p>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
    <div class="col-md-1"></div>
</div>



<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="vendor/jquery/jquery.min.js"></script>
<script src="vendor/bootstrap/js/bootstrap.min.js"></script>

<script src="~/js/isotope.min.js"></script>
<script src="~/js/owl-carousel.js"></script>
<script src="~/js/tabs.js"></script>
<script src="~/js/popup.js"></script>
<script src="~/js/custom.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.querySelectorAll('form').forEach(form => {
      form.addEventListener('submit', e => {
        // find the button that was clicked (or first submit button)
        const btn = form.querySelector('button[type="submit"]');
        if (btn) {
          btn.disabled = true;
          // re‑enable after 3s in case of client‑side failure
          setTimeout(() => btn.disabled = false, 3000);
        }
      });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", ()=>{
      document.querySelectorAll("form[id^='ratingForm-']").forEach(form=>{
        form.querySelectorAll("input[name='RatingValue']").forEach(radio=>{
          radio.addEventListener("change", ()=>{
            const data = new FormData(form);
            fetch(form.action, {
              method: "POST",
              headers: { "X-Requested-With": "XMLHttpRequest" },
              body: data
            })
            .then(r=>r.json())
            .then(json=>{
              if (json.success) {
      window.location.reload();
    } else {
                alert("Could not submit rating: "+(json.message||"unknown error"));
              }
            })
            .catch(err=>console.error("AJAX error:", err));
          });
        });
      });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('purchaseForm');
        if (!form) return;

        form.addEventListener('submit', function (e) {
            e.preventDefault();

            Swal.fire({
                title: 'Xác nhận mua?',
                text: 'Bạn có muốn mua phim này không?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#e50914',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Mua',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    const data = new FormData(form);
                    fetch(form.action, {
                        method: 'POST',
                        headers: { 'X-Requested-With': 'XMLHttpRequest' },
                        body: data
                    })
                        .then(r => r.json())
                        .then(json => {
                            if (json.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành công',
                                    text: 'Mua phim thành công!',
                                    confirmButtonColor: '#e50914'
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: json.message || 'Not enough coins',
                                    confirmButtonColor: '#e50914'
                                });
                            }
                        })
                        .catch(() => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Đã xảy ra lỗi!',
                                confirmButtonColor: '#e50914'
                            });
                        });
                }
            });
        });
    });
</script>