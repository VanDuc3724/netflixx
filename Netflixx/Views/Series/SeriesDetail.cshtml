@model Netflixx.Models.SeriesSouModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>@Model.Name - Series Detail</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #3498db;
            --danger-color: #e74c3c;
            --secondary-color: #95a5a6;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        .detail-header {
            background-color: white;
            padding: 20px 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            margin-bottom: 30px;
        }

        .detail-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .series-info {
            background-color: white;
            border-radius: 8px;
            padding: 25px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            margin-bottom: 30px;
        }

        .series-title {
            color: var(--dark-color);
            margin-bottom: 15px;
            font-weight: 600;
        }

        .series-description {
            color: #7f8c8d;
            margin-bottom: 25px;
            line-height: 1.6;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
        }

        .btn-action {
            padding: 8px 16px;
            border-radius: 6px;
            font-weight: 500;
            border: none;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-edit {
            background-color: var(--primary-color);
            color: white;
        }

            .btn-edit:hover {
                background-color: #2980b9;
            }

        .btn-delete {
            background-color: var(--danger-color);
            color: white;
        }

            .btn-delete:hover {
                background-color: #c0392b;
            }

        .btn-back {
            background-color: var(--secondary-color);
            color: white;
        }

            .btn-back:hover {
                background-color: #7f8c8d;
            }

        .products-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title {
            color: var(--dark-color);
            font-weight: 600;
        }

        .btn-add {
            background-color: var(--primary-color);
            color: white;
            padding: 8px 16px;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            transition: background 0.3s;
        }

            .btn-add:hover {
                background-color: #2980b9;
            }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 25px;
        }

        .product-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: 1px solid #eaeaea;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.15);
            }

        .product-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-bottom: 1px solid #eee;
        }

        .product-body {
            padding: 15px;
        }

        .product-name {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 8px;
            color: var(--dark-color);
        }

        .product-price {
            color: #e74c3c;
            font-weight: 600;
            font-size: 1.2rem;
            margin-bottom: 8px;
        }

        .product-description {
            color: #7f8c8d;
            font-size: 0.9rem;
            margin-bottom: 12px;
            line-height: 1.5;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .product-meta {
            display: flex;
            justify-content: space-between;
            font-size: 0.85rem;
            color: #95a5a6;
            margin-bottom: 15px;
        }

        .product-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 0.8rem;
        }

        .empty-products {
            text-align: center;
            padding: 40px 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .empty-icon {
            font-size: 50px;
            color: #bdc3c7;
            margin-bottom: 15px;
        }

        .confirmation-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 25px;
            border-radius: 8px;
            max-width: 500px;
            width: 90%;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .badge-category {
            background-color: #f1c40f;
            color: #2c3e50;
        }

        .badge-stock {
            background-color: #2ecc71;
            color: white;
        }

        .pagination {
            margin-top: 30px;
        }

        .page-item.active .page-link {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .page-link {
            color: var(--primary-color);
        }

            .page-link:hover {
                color: var(--dark-color);
            }
    </style>
</head>
<body>
    <div class="detail-header">
        <div class="detail-container">
            <button class="btn-action btn-back" onclick="goBack()">
                <i class="fas fa-arrow-left"></i> Back to Series
            </button>
        </div>
    </div>

    <div class="detail-container">
        <div class="series-info">
            <h2 class="series-title">@Model.Name</h2>
            <p class="series-description">@Model.Description</p>

            <div class="action-buttons">
                <button class="btn-action btn-edit" onclick="window.location.href='@Url.Action("Edit", "SouvenirSeries", new { id = Model.Id })'">
                    <i class="fas fa-edit"></i> Edit
                </button>
            </div>
            <div class="products-header">
                <h3 class="section-title">Products in this Series</h3>
            </div>

            @if (Model.Products != null && Model.Products.Any())
            {
                <div class="product-grid">
                    @foreach (var product in Model.Products)
                    {
                        <div class="product-card">
                            <!-- Product Image -->
                            <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "https://via.placeholder.com/300x200?text=No+Image" : product.ImageUrl)"
                                 alt="@product.Name" class="product-image">

                            <div class="product-body">
                                <!-- Product Name -->
                                <h5 class="product-name">@product.Name</h5>

                                <!-- Product Price -->
                                <div class="product-price">$@product.Price.ToString("N2")</div>

                                <!-- Product Description -->
                                <p class="product-description">@product.Description</p>

                                <!-- Product Meta -->
                                <div class="product-meta">
                                    <span class="badge badge-category">@product.Category</span>
                                    <span class="badge badge-stock">Stock: @product.StockQuantity</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- Thêm đoạn này sau phần hiển thị sản phẩm trong SeriesDetail.cshtml -->
@if (Model.Products != null && Model.Products.Any())
{
    <div class="product-grid">
        <!-- Code hiển thị sản phẩm hiện tại -->
    </div>

    <!-- Điều khiển phân trang -->
    <nav aria-label="Phân trang sản phẩm" class="mt-4">
        <ul class="pagination justify-content-center">
            @{
                int currentPage = ViewBag.ProductPage;
                int totalPages = ViewBag.TotalProductPages;
                int prevPage = currentPage - 1;
                int nextPage = currentPage + 1;
                
                // Nút Previous
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Detail", new { id = Model.Id, productPage = prevPage })" aria-label="Trang trước">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                // Các số trang
                for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Detail", new { id = Model.Id, productPage = i })">@i</a>
                    </li>
                }

                // Nút Next
                <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Detail", new { id = Model.Id, productPage = nextPage })" aria-label="Trang sau">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}
            }
            else
            {
                <div class="empty-products">
                    <div class="empty-icon">
                        <i class="fas fa-box-open"></i>
                    </div>
                    <h4>No Products Yet</h4>
                    <p>Add your first product to this series</p>
                    <button class="btn-add" onclick="window.location.href='@Url.Action("Edit", "SouvenirSeries", new { id = Model.Id })'">
                        <i class="fas fa-plus"></i> Add Product
                    </button>
                </div>
            }
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="confirmation-modal">
        <div class="modal-content">
            <h4>Confirm Delete</h4>
            <p id="deleteMessage">Are you sure you want to delete this series?</p>
            <div class="modal-actions">
                <button class="btn-action btn-back" onclick="closeModal()">Cancel</button>
                <button class="btn-action btn-delete" onclick="deleteSeries()">Delete</button>
            </div>
        </div>
    </div>

    <script>
        const seriesId = @Model.Id;

        // Navigation
        function goBack() {
            window.location.href = '@Url.Action("Index", "SouvenirSeries")';
        }

        // Edit series
        function editSeries() {
            const newName = prompt("Edit series name:", "@Model.Name");
            if (newName === null) return;

            const newDesc = prompt("Edit series description:", "@Model.Description");
            if (newDesc === null) return;

            fetch('@Url.Action("Edit", "SouvenirSeries")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    Id: seriesId,
                    Name: newName,
                    Description: newDesc
                })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Error updating series');
                }
            });
        }

        // Delete series confirmation
        function confirmDelete() {
            if (@((Model.Products?.Count ?? 0) > 0)) {
                document.getElementById('deleteMessage').textContent =
                    "This series contains products. Are you sure you want to delete it? All products will be removed.";
            } else {
                document.getElementById('deleteMessage').textContent =
                    "Are you sure you want to delete this series?";
            }

            document.getElementById('deleteModal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }

        // Delete series
        function deleteSeries() {
            closeModal();

            fetch('@Url.Action("Delete", "SouvenirSeries")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    Id: seriesId
                })
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '@Url.Action("Index", "SouvenirSeries")';
                } else {
                    response.json().then(data => {
                        alert(data.error || 'Error deleting series');
                    });
                }
            });
        }
    </script>
</body>
</html>