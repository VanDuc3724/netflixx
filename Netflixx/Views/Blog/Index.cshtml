@model IEnumerable<Netflixx.Models.BlogPost>

@{
    ViewData["Title"] = "Blog Posts";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white">@ViewData["Title"]</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> Create New Post
        </a>
    </div>

    <!-- Filters and Sorting Controls -->
    <div class="card bg-dark border-secondary mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <!-- Genre Filter -->
                <div class="col-md-4">
                    <label for="genreFilter" class="form-label text-white">Filter by Genre:</label>
                    <select name="genreFilter" id="genreFilter" class="form-select bg-dark text-white border-secondary">
                        <option value="">All Genres</option>
                        @if (ViewBag.Genres != null)
                        {
                            @foreach (var genre in ViewBag.Genres)
                            {
                                <option value="@genre" selected="@(ViewBag.CurrentGenreFilter == genre)">@genre</option>
                            }
                        }
                    </select>
                </div>

                <!-- Sort By -->
                <div class="col-md-3">
                    <label for="sortBy" class="form-label text-white">Sort By:</label>
                    <select name="sortBy" id="sortBy" class="form-select bg-dark text-white border-secondary">
                        <option value="date" selected="@(ViewBag.CurrentSort == "date")">Date</option>
                        <option value="genre" selected="@(ViewBag.CurrentSort == "genre")">Genre</option>
                    </select>
                </div>

                <!-- Sort Order -->
                <div class="col-md-3">
                    <label for="sortOrder" class="form-label text-white">Order:</label>
                    <select name="sortOrder" id="sortOrder" class="form-select bg-dark text-white border-secondary">
                        <option value="desc" selected="@(ViewBag.CurrentOrder == "desc")">Latest</option>
                        <option value="asc" selected="@(ViewBag.CurrentOrder == "asc")">Earliest</option>
                    </select>
                </div>

                <!-- Apply Button -->
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter"></i> Apply
                    </button>
                </div>
            </form>

            <!-- Clear Filters -->
            @if (!string.IsNullOrEmpty(ViewBag.CurrentGenreFilter?.ToString()))
            {
                <div class="mt-2">
                    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-times"></i> Clear Filters
                    </a>
                    <span class="text-muted ms-2">
                        Showing posts for genre: <strong class="text-info">@ViewBag.CurrentGenreFilter</strong>
                    </span>
                </div>
            }
        </div>
    </div>

    <!-- Blog Posts Grid -->
    <div class="row">
        @if (Model?.Any() == true)
        {
            @foreach (var item in Model)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card bg-dark border-secondary h-100 film-card">
                        @if (item.Film != null)
                        {
                            <div class="card-header bg-transparent border-secondary">
                                <span class="badge bg-info genre-tag">@item.Film.Genre</span>
                                <small class="text-muted float-end">@item.Film.Title</small>
                            </div>
                        }

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-white">@Html.DisplayFor(modelItem => item.Title)</h5>

                            <div class="blog-content-preview text-light flex-grow-1">
                                @Html.Raw(item.Content?.Length > 200 ? item.Content.Substring(0, 200) + "..." : item.Content)
                            </div>

                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> @item.CreatedDate.ToString("MMM dd, yyyy")
                                    </small>
                                    @if (item.LastUpdated.HasValue)
                                    {
                                        <small class="text-warning">
                                            <i class="fas fa-edit"></i> Updated @item.LastUpdated.Value.ToString("MMM dd")
                                        </small>
                                    }
                                </div>

                                <div class="btn-group w-100" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">
                                        <i class="fas fa-eye"></i> Read
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">
                                        <i class="fas fa-trash"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="card bg-dark border-secondary">
                    <div class="card-body text-center">
                        <h4 class="text-muted">No Blog Posts Found</h4>
                        <p class="text-muted">
                            @if (!string.IsNullOrEmpty(ViewBag.CurrentGenreFilter?.ToString()))
                            {
                                <span>No posts found for the selected genre. <a asp-action="Index" class="text-info">View all posts</a></span>
                            }
                            else
                            {
                                <span>There are no blog posts yet. <a asp-action="Create" class="text-info">Create the first one!</a></span>
                            }
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Results Summary -->
    @if (Model?.Any() == true)
    {
        <div class="mt-4">
            <div class="card bg-dark border-secondary">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                Showing @Model.Count() blog post(s)
                                @if (!string.IsNullOrEmpty(ViewBag.CurrentGenreFilter?.ToString()))
                                {
                                    <span>for genre "@ViewBag.CurrentGenreFilter"</span>
                                }
                            </small>
                        </div>
                        <div class="col-md-6 text-end">
                            <small class="text-muted">
                                Sorted by @ViewBag.CurrentSort (@ViewBag.CurrentOrder)
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
