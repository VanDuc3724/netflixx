@model ProductionManagerApp.Models.ProductionManager

@{
    ViewData["Title"] = "Chỉnh sửa Công ty Sản xuất";
}

@await Html.PartialAsync("_ProductionManagerMenu")

<div class="main-content" id="mainContent">

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-edit mr-2"></i>
                        Chỉnh sửa Công ty Sản xuất
                    </h3>
                </div>

                <div class="card-body">
                    <form asp-action="Edit" method="post" enctype="multipart/form-data" novalidate>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="CreatedAt" />
                        @await Html.PartialAsync("_ProductionManagerForm", Model)

                        <div class="form-group text-right">
                            <a asp-action="Index" class="btn btn-secondary mr-2">
                                <i class="fas fa-arrow-left mr-1"></i>
                                Quay lại
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save mr-1"></i>
                                Lưu thay đổi
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<style>
    .required::after {
        content: " *";
        color: red;
    }

    .form-label {
        font-weight: 600;
        margin-bottom: 8px;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .card {
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        border: none;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }
</style>

<script>
     // Preview logo when a file is selected
    document.getElementById('LogoFile').addEventListener('change', function () {
        const file = this.files[0];
        const preview = document.getElementById('logoPreview');
        const image = document.getElementById('logoImage');

        if (file) {
            const url = URL.createObjectURL(file);
            image.src = url;
            image.onload = () => URL.revokeObjectURL(url);
            preview.style.display = 'block';
        } else {
            preview.style.display = 'none';
            image.src = '';
        }
    });

    // Client-side validation
    document.querySelector('form').addEventListener('submit', function(e) {
        let isValid = true;

        // Kiểm tra các trường bắt buộc
        const requiredFields = ['Name', 'Country'];
        requiredFields.forEach(field => {
            const input = document.getElementById(field);
            if (!input.value.trim()) {
                isValid = false;
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        });

        if (!isValid) {
            e.preventDefault();
        }
    });
</script>
@await Html.PartialAsync("_ProductionManagerMenuScripts")

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}