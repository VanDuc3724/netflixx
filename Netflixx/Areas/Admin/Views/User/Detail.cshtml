@model Netflixx.Models.UserViewModel
@{
    ViewData["Title"] = "Thông tin người dùng";
}
<style>
    body {
        background-color: #141414;
        color: #fff;
        font-family: 'Segoe UI', sans-serif;
    }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form asp-action="Update" method="post" id="userForm">
                <div class="card bg-dark text-white shadow-lg">
                    <div class="card-header bg-danger text-white text-center" >
                        <h3 class="mb-0">Chi tiết người dùng</h3>
                    </div>
                    <div class="card-body">
                        <input type="hidden" asp-for="Id" />
                        <table class="table table-borderless text-white">
                            <tbody>
                                <tr>
                                    <th style="width: 30%;">Họ và tên</th>
                                    <td>
                                        <input class="form-control bg-dark text-white border-secondary" asp-for="Name" readonly />
                                    </td>
                                </tr>
                                <tr>
                                    <th>Email</th>
                                    <td>
                                        <input class="form-control bg-dark text-white border-secondary" asp-for="Email" readonly />
                                    </td>
                                </tr>
                                <tr>
                                    <th>Số điện thoại</th>
                                    <td>
                                        <input class="form-control bg-dark text-white border-secondary" asp-for="PhoneNumber" readonly />
                                    </td>
                                </tr>
                                <tr>
                                    <th>Ngày sinh</th>
                                    <td>
                                        <input class="form-control bg-dark text-white border-secondary" asp-for="dateOfBirth" type="date" readonly />
                                    </td>
                                </tr>
                                <tr>
                                    <th>Vai trò</th>
                                    <td>
                                        <div class="dropdown">
                                            <button class="btn btn-outline-light dropdown-toggle" type="button" id="dropdownRoleButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                @Model.Role
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="dropdownRoleButton">
                                                @foreach (var role in Model.AvailableRoles)
                                                {
                                                    <li>
                                                        <a class="dropdown-item" href="#" onclick="selectRole('@role'); return false;">
                                                            @role
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                        <input type="hidden" name="Role" id="SelectedRole" value="@Model.Role" />
                                    </td>
                                </tr>
                                <tr>
                                    <th>Trạng thái</th>
                                    <td>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" asp-for="IsActive" type="radio" id="activeStatus" value="true" />
                                            <label class="form-check-label text-white" for="activeStatus">Hoạt động</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" asp-for="IsActive" type="radio" id="deactiveStatus" value="false" />
                                            <label class="form-check-label text-white" for="deactiveStatus">Vô hiệu hóa</label>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="card-footer text-center bg-dark border-top border-secondary">
                        <a asp-action="Index" class="btn btn-outline-light me-2">
                            <i class="bi bi-arrow-left"></i> Quay lại
                        </a>
                        <button type="submit" id="saveBtn" class="btn btn-success me-2 d-none">
                            Lưu
                        </button>
                        <button type="button" id="cancelBtn" class="btn btn-danger d-none">
                            Hủy
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


    <script src="~/js/User.js"></script>
    <script>
            document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("userForm");
        const saveBtn = document.getElementById("saveBtn");
        const cancelBtn = document.getElementById("cancelBtn");
        const roleInput = document.getElementById("SelectedRole");

        // Lưu lại giá trị ban đầu
        const originalValues = {};
        Array.from(form.elements).forEach(input => {
            if (input.name && input.type !== "hidden" && input.type !== "submit" && input.type !== "button") {
                originalValues[input.name] = input.value;
            }
        });

        // Gán sự kiện cho input/textarea/select để kiểm tra thay đổi
        form.addEventListener("input", () => {
            toggleActionButtons();
        });

        // Riêng radio button cần lắng nghe sự kiện change
        const radios = form.querySelectorAll('input[type="radio"]');
        radios.forEach(radio => {
            radio.addEventListener("change", toggleActionButtons);
        });

        // Nếu chọn vai trò mới
        window.selectRole = function (role) {
            document.getElementById("dropdownRoleButton").innerText = role;
            roleInput.value = role;
            toggleActionButtons();
        };

        // Kiểm tra có thay đổi so với ban đầu không
        function toggleActionButtons() {
            let hasChanged = false;

            Array.from(form.elements).forEach(input => {
                if (!input.name || input.type === "submit" || input.type === "button") return;

                if (input.type === "radio") {
                    if (input.checked && originalValues[input.name] !== input.value) {
                        hasChanged = true;
                    }
                } else {
                    if (originalValues[input.name] !== undefined && originalValues[input.name] !== input.value) {
                        hasChanged = true;
                    }
                }
            });

            if (hasChanged) {
                saveBtn.classList.remove("d-none");
                cancelBtn.classList.remove("d-none");
            } else {
                saveBtn.classList.add("d-none");
                cancelBtn.classList.add("d-none");
            }
        }

        // Xử lý khi bấm nút "Hủy" → reload lại trang
        cancelBtn.addEventListener("click", function () {
            location.reload();
        });
    });

    </script>