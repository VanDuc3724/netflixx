@model Netflixx.Models.Souvenir.ProductSouModel
@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
    Layout = null; // If you need a layout, replace with "_Layout"
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4a6bff;
            --secondary-color: #6c757d;
            --success-color: #28a745;
            --info-color: #17a2b8;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
            --border-color: #e0e0e0;
        }

        body {
            background-color: #f5f7fa;
            font-family: 'Segoe UI', 'Roboto', sans-serif;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 2rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }

        .page-title {
            color: var(--dark-color);
            font-weight: 600;
            margin: 0;
        }

        .btn {
            font-weight: 500;
            letter-spacing: 0.5px;
            padding: 0.5rem 1.25rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
            border: 1px solid transparent;
            color: white;
            text-align: center;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-secondary {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
        }

        .form-group label {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .form-control {
            border-radius: 6px;
            border: 1px solid var(--border-color);
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.2rem rgba(74, 107, 255, 0.25);
            }

        .alert {
            border-radius: 6px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

        .text-danger {
            color: var(--danger-color);
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .text-success {
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }

        #imgpreview {
            border-radius: 6px;
            border: 1px solid var(--border-color);
            margin-top: 1rem;
            max-width: 200px;
            max-height: 200px;
        }

        /* SUMMERNOTE FIX - REPLACE ALL EXISTING SUMMERNOTE CSS */
        .note-editor.note-frame {
            border: 1px solid #e0e0e0 !important;
            border-radius: 6px !important;
            margin-top: 0.5rem;
        }

            .note-editor.note-frame .note-toolbar {
                background-color: #f8f9fa !important;
                border-bottom: 1px solid #e0e0e0 !important;
                border-radius: 6px 6px 0 0 !important;
                padding: 8px 5px !important;
                z-index: 1 !important;
            }

        .note-toolbar .note-btn-group {
            margin-right: 8px !important;
            margin-top: 0 !important;
            margin-bottom: 0 !important;
        }

        .note-btn {
            padding: 0.4rem 0.6rem !important;
            background: white !important;
            border: 1px solid #dee2e6 !important;
            border-radius: 4px !important;
        }

            .note-btn i {
                color: #495057 !important;
                font-size: 14px !important;
                display: inline-block !important;
                width: 16px !important;
                height: 16px !important;
            }

            .note-btn:hover {
                background-color: #e9ecef !important;
            }

            .note-btn.active {
                background-color: #e0e0e0 !important;
            }

        .note-editable {
            background-color: white !important;
            min-height: 200px !important;
            border-radius: 0 0 6px 6px !important;
            padding: 15px !important;
        }

        /* Custom file input */
        .custom-file-label::after {
            content: "Duyệt";
        }

        /* Validation styles */
        .is-invalid {
            border-color: var(--danger-color) !important;
        }

        .is-valid {
            border-color: var(--success-color) !important;
        }

        .custom-file-input.is-invalid ~ .custom-file-label {
            border-color: var(--danger-color) !important;
        }

        .custom-file-input.is-valid ~ .custom-file-label {
            border-color: var(--success-color) !important;
        }

        
    </style>
</head>

<body>
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">@ViewData["Title"]</h1>
            <div>
                <a href="/ShopSouvenir" class="btn btn-secondary">
                    <i class="fas fa-arrow-left mr-2"></i>Quay lại
                </a>
            </div>
        </div>

        @if (TempData["success"] != null)
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle mr-2"></i>@TempData["success"]
            </div>
        }
        @if (TempData["error"] != null)
        {
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle mr-2"></i>@TempData["error"]
            </div>
        }

        <form asp-action="Edit" method="post" enctype="multipart/form-data" id="productForm">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />


            <div class="form-group">
                <label asp-for="Name" class="control-label">Tên sản phẩm</label>
                <input asp-for="Name" class="form-control" name="Name" value="@Model.Name" placeholder="Nhập tên sản phẩm" required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label">Danh mục</label>
                        <select asp-for="CategoryId" class="form-control" name="CategoryId" required>
                            <option value="">-- Chọn danh mục --</option>
                            @foreach (var item in ViewBag.CategoryId as SelectList)
                            {
                                <option value="@item.Value" selected="@(item.Value == Model.CategoryId.ToString())">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="BrandId" class="control-label">Hãng sản xuất</label>
                        <select asp-for="BrandId" class="form-control" name="BrandId" required>
                            <option value="">-- Chọn hãng sản xuất --</option>
                            @foreach (var item in ViewBag.BrandId as SelectList)
                            {
                                <option value="@item.Value" selected="@(item.Value == Model.BrandId.ToString())">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="BrandId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="SeriesId" class="control-label">Dòng sản phẩm</label>
                        <select asp-for="SeriesId" class="form-control" name="SeriesId" required>
                            <option value="">-- Chọn dòng sản phẩm --</option>
                            @foreach (var item in ViewBag.SeriesId as SelectList)
                            {
                                <option value="@item.Value" selected="@(item.Value == Model.SeriesId.ToString())">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="SeriesId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Price" class="control-label">Giá (VND)</label>
                        <input asp-for="Price" class="form-control typing-price" name="Price"
                               type="number" step="0.01" min="0" max="200000000"
                               value="@Model.Price.ToString("0.00")" placeholder="Nhập giá sản phẩm" required />
                        <span id="price-convert" class="text-success"></span>
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="StockQuantity" class="control-label">Số lượng tồn kho</label>
                        <input asp-for="StockQuantity" class="form-control" name="StockQuantity"
                               type="number" min="0" max="999" value="@Model.StockQuantity" placeholder="Nhập số lượng" required />
                        <span asp-validation-for="StockQuantity" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label">Mô tả sản phẩm</label>
                <textarea asp-for="Description" class="form-control" id="Description" name="Description">@Html.Raw(Model.Description)</textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImageUpload" class="control-label">Hình ảnh sản phẩm</label>
                <div class="custom-file">
                    <input asp-for="ImageUpload" class="custom-file-input" type="file" accept="image/*" name="ImageUpload" id="ImageUpload" />
                    <label class="custom-file-label" for="ImageUpload">Chọn hình ảnh</label>
                </div>
                <span asp-validation-for="ImageUpload" class="text-danger"></span>
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" id="imgpreview" class="pt-2" style="max-width:200px; max-height:200px;" />
                }
                else
                {
                    <img id="imgpreview" class="pt-2" style="display:none; max-width:200px; max-height:200px;" />
                }
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save mr-2"></i>Lưu sản phẩm
                </button>
                <a href="/ShopSouvenir" class="btn btn-secondary">
                    <i class="fas fa-times mr-2"></i>Hủy bỏ
                </a>
            </div>
        </form>
    </div>

    <!-- Scripts Section -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/lang/summernote-vi-VN.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Initialize Summernote
            var UppercaseButton = function (context) {
                var ui = $.summernote.ui;
                var button = ui.button({
                    contents: '<i class="note-btn-uppercase"></i>',
                    tooltip: 'Chữ hoa',
                    click: function () {
                        var range = context.invoke('editor.getSelectedRange');
                        var selectedText = range.toString();
                        if (selectedText) {
                            context.invoke('editor.pasteHTML', selectedText.toUpperCase());
                        }
                    }
                });
                return button.render();
            };

            var LowercaseButton = function (context) {
                var ui = $.summernote.ui;
                var button = ui.button({
                    contents: '<i class="note-btn-lowercase"></i>',
                    tooltip: 'Chữ thường',
                    click: function () {
                        var range = context.invoke('editor.getSelectedRange');
                        var selectedText = range.toString();
                        if (selectedText) {
                            context.invoke('editor.pasteHTML', selectedText.toLowerCase());
                        }
                    }
                });
                return button.render();
            };

                    // Thêm vào phần $(document).ready(function() {

        // Custom validation
        $.validator.addMethod("valueNotEquals", function(value, element, arg) {
            return arg !== value;
        }, "Vui lòng chọn một giá trị");

        // Form validation
        $("#productForm").validate({
            rules: {
                Name: {
                    required: true,
                    maxlength: 255
                },
                CategoryId: {
                    valueNotEquals: ""
                },
                BrandId: {
                    valueNotEquals: ""
                },
                SeriesId: {
                    valueNotEquals: ""
                },
                Price: {
                    required: true,
                    min: 0,
                    max: 200000000,
                    number: true
                },
                StockQuantity: {
                    required: true,
                    min: 0,
                    max: 999,
                    digits: true
                },
                
            },
            messages: {
                Name: {
                    required: "Vui lòng nhập tên sản phẩm",
                    maxlength: "Tên sản phẩm không quá 255 ký tự"
                },
                CategoryId: {
                    valueNotEquals: "Vui lòng chọn danh mục"
                },
                BrandId: {
                    valueNotEquals: "Vui lòng chọn hãng sản xuất"
                },
                SeriesId: {
                    valueNotEquals: "Vui lòng chọn dòng sản phẩm"
                },
                Price: {
                    required: "Vui lòng nhập giá sản phẩm",
                    min: "Giá sản phẩm tối thiểu là 0 VND",
                    max: "Giá sản phẩm tối đa là 200,000,000 VND",
                    number: "Vui lòng nhập số hợp lệ"
                },
                StockQuantity: {
                    required: "Vui lòng nhập số lượng",
                    min: "Số lượng tối thiểu là 0",
                    max: "Số lượng tối đa là 99",
                    digits: "Vui lòng nhập số nguyên"
                },
                
            },
            errorElement: "span",
            errorClass: "text-danger",
            errorPlacement: function(error, element) {
                if (element.attr("name") === "ImageUpload") {
                    error.insertAfter(element.closest(".custom-file"));
                } else {
                    error.insertAfter(element);
                }
            },
            highlight: function(element, errorClass, validClass) {
                $(element).addClass("is-invalid").removeClass("is-valid");
            },
            unhighlight: function(element, errorClass, validClass) {
                $(element).removeClass("is-invalid").addClass("is-valid");
            },
            submitHandler: function(form) {
                // Ensure Summernote content is synced before form submission
                var summernoteContent = $('#Description').summernote('code');
                $('#Description').val(summernoteContent);

                // Check if Summernote content is empty
                if ($.trim(summernoteContent) === "" || summernoteContent === "<p><br></p>") {
                    $("#Description").val("");
                    $("<span class='text-danger'>Vui lòng nhập mô tả sản phẩm</span>")
                        .insertAfter("#Description");
                    return false;
                }

                form.submit();
            }
        });

        // Real-time validation for price
        $(".typing-price").on("input", function() {
            var price = $(this).val();
            if (price > 200000000) {
                $(this).val(200000000);
                price = 200000000;
            }
            if (price < 0) {
                $(this).val(0);
                price = 0;
            }

            if (price) {
                $("#price-convert").html(
                    "Giá hiển thị: " + new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                    }).format(price)
                );
            } else {
                $("#price-convert").html("");
            }
        });

        // Real-time validation for quantity
        $("input[name='StockQuantity']").on("input", function() {
            var quantity = $(this).val();
            if (quantity > 99) {
                $(this).val(99);
            }
            if (quantity < 0) {
                $(this).val(0);
            }
        });

                    $('#Description').summernote({
            height: 200,
            lang: 'vi-VN',
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ],
            placeholder: 'Nhập mô tả chi tiết sản phẩm...',
            dialogsInBody: true,
            disableDragAndDrop: true,
            followingToolbar: false,
            shortcuts: false,
            fontSizes: ['8', '9', '10', '11', '12', '14', '16', '18', '24', '36'],
                callbacks: {
            onInit: function() {
                // Set nội dung mô tả từ model khi khởi tạo
                $(this).summernote('code', '@Html.Raw(Model.Description)');

                // Force show all icons after initialization
                $('.note-btn i').css({
                    'visibility': 'visible',
                    'opacity': '1'
                });
            }
        }
        });

            // Image preview and file input label
            $("#ImageUpload").on("change", function() {
                readURL(this);
                var fileName = $(this).val().split('\\').pop();
                $(this).next('.custom-file-label').html(fileName);
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $('#imgpreview').attr('src', e.target.result).show();
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }

            // Price formatting in VND
            $(".typing-price").on("keyup", function () {
                var price = $(this).val();
                if (price) {
                    $("#price-convert").html(
                        "Giá hiển thị: " + new Intl.NumberFormat('vi-VN', {
                            style: 'currency',
                            currency: 'VND'
                        }).format(price)
                    );
                } else {
                    $("#price-convert").html("");
                }
            });

            // Ensure Summernote content is synced before form submission
            $('#productForm').on('submit', function () {
                var summernoteContent = $('#Description').summernote('code');
                $('#Description').val(summernoteContent);
            });
        });
    </script>
</body>
</html>